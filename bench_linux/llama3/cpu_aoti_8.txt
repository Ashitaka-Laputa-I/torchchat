python3 torchchat.py export llama3 --quantize '{"linear:int8": {"groupsize": 0}, "precision": {"dtype":"bfloat16"}, "executor":{"accelerator":"cpu"}}' --output-dso-path /tmp/model8.so
python3 torchchat.py generate llama3 --dso-path /tmp/model8.so --prompt "Once upon a time," --max-new-tokens 256 --device cpu --num-samples 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
python3 torchchat.py export llama3 --quantize '{"linear:int8": {"groupsize": 0}, "precision": {"dtype":"bfloat16"}, "executor":{"accelerator":"cpu"}}' --output-dso-path /tmp/model8.so
Note: NumExpr detected 22 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 16.
NumExpr defaulting to 16 threads.
PyTorch version 2.5.0.dev20240728+cu121 available.
Using device=cpu
Setting max_seq_length to 300 for DSO export.
Loading model...
Time to load model: 0.39 seconds
Quantizing the model with: {'linear:int8': {'groupsize': 0}, 'precision': {'dtype': 'bfloat16'}, 'executor': {'accelerator': 'cpu'}}
Time to quantize model: 31.53 seconds
-----------------------------------------------------------
Exporting model using AOT Inductor to /tmp/model8.so
The generated DSO model can be found at: /tmp/model8.so
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
python3 torchchat.py generate llama3 --dso-path /tmp/model8.so --prompt "Once upon a time," --max-new-tokens 256 --device cpu --num-samples 3
Note: NumExpr detected 22 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 16.
NumExpr defaulting to 16 threads.
PyTorch version 2.5.0.dev20240728+cu121 available.
Warning: checkpoint path ignored because an exported DSO or PTE path specified
Warning: checkpoint path ignored because an exported DSO or PTE path specified
Using device=cpu Intel(R) Xeon(R) Platinum 8339HC CPU @ 1.80GHz
Loading model...
Time to load model: 0.37 seconds
-----------------------------------------------------------
Once upon a time, there was a small village surrounded by a dense forest. The villagers lived simple lives, relying on the forest for their daily needs. They would venture into the forest every day to collect firewood, fruits, and other essential items.
One day, a group of travelers stumbled upon the village. They were weary from their journey and asked for shelter and food. The villagers, being kind and hospitable, welcomed the travelers and offered them hospitality.
As the travelers rested and ate, they began to share stories of their journey. They spoke of the vast lands they had traversed and the wonders they had seen. The villagers listened with wide eyes, fascinated by the tales of the outside world.

Among the travelers was a young woman named Maria, who was a skilled healer. She had spent many years studying the art of healing and had developed a deep understanding of the natural world. Maria noticed that the villagers were fascinated by her stories and asked if she could share her knowledge with them.

The villagers eagerly accepted Maria's offer, and she began to teach them about the healing properties of the forest plants. She showed them how to identify the different species, how to prepare the remedies, and how to use them to treat various ailments.

As Maria shared her knowledge, the villagers began to take
Time for inference 1: 67.23 sec total, time to first token 1.33 sec with sequential prefill, 255 tokens, 3.79 tokens/sec, 263.63 ms/token
Bandwidth achieved: 60.92 GB/s
*** This first iteration will include cold start effects for dynamic import, hardware caches. ***
Once upon a time, on a distant planet, there was a young girl named Aria. She lived in a small village surrounded by vast, open plains and towering mountains. Aria was a curious child, always eager to explore and learn about the world around her.
One day, while wandering through the village, Aria stumbled upon a small, mysterious shop. The sign above the door read "Curios and Wonders," and the windows were filled with an assortment of strange and exotic items. Aria's curiosity was piqued, and she pushed open the door to venture inside.

The shop was dimly lit, and the air was thick with the scent of old books and dust. Aria's eyes adjusted slowly, and she saw that the shop was packed with all manner of peculiar objects. There were ancient tomes bound in worn leather, peculiar devices that looked like they belonged in a steampunk novel, and strange, glowing orbs that seemed to pulse with an otherworldly energy.

Aria wandered the aisles, running her fingers over the various objects and marveling at their strangeness. As she explored, she began to notice that the shop seemed to be... shifting. The shelves seemed to change, the objects rearranging themselves in impossible ways. Aria felt a
Time for inference 2: 109.31 sec total, time to first token 1.12 sec with sequential prefill, 255 tokens, 2.33 tokens/sec, 428.65 ms/token
Bandwidth achieved: 37.47 GB/s
Once upon a time, there was a wise old man named Satish. Satish was known throughout the land for his wisdom, his kind heart, and his ability to help others. Many people would come to him for advice and guidance, and he would always offer them words of wisdom and compassion.

One day, a young man named Rohan came to Satish with a problem. Rohan was struggling in his studies and was feeling overwhelmed. He felt like he was failing and didn't know what to do.

Satish listened carefully to Rohan's concerns and then offered him some advice. "Rohan, my young friend," he said, "the key to success is not to be found in your studies, but rather in your own thoughts and feelings. You must learn to manage your mind and cultivate a positive attitude."

Rohan was intrigued by Satish's words and asked him to explain. Satish told him that the mind is like a garden and that we must tend to it with care. He taught Rohan how to use meditation and visualization to cultivate a positive and productive mindset.

Rohan was amazed by the results he saw in his own life. He found that he was able to focus better and learn more easily. He also felt more confident and self-assured.

As time
Time for inference 3: 148.44 sec total, time to first token 4.21 sec with sequential prefill, 255 tokens, 1.72 tokens/sec, 582.11 ms/token
Bandwidth achieved: 27.59 GB/s

========================================

Average tokens/sec: 2.61
Memory used: 0.00 GB
